#!/bin/sh
# Copyright 2019, Development Gateway. See LICENSE.

TRANSPOSE_ROWS='
function flush() {
  if (!need_flush) return;

  name  = this[fields[1]];
  whole = int(this[fields[2]] / 1024 ^ 3);
  part  = int(this[fields[3]] / 1024 ^ 3);
  free  = part_is_free ? part : whole - part;
  usage = int(100 * (1 - free / whole));

  print name, whole, free, usage "%";

  need_flush = 0;
}

BEGIN {
  FS=" +[(][ [:upper:]]+[)]( *): ";
  OFS="\t";
  need_flush = 0;
  split(field_names, fields, ",");
}

{
  if (NF == 0) {
    flush();
  } else {
    gsub(" +", "", $1);
    this[$1] = $2;
    need_flush = 1;
  }
}

END {
  flush();
}
'
: ${SR_TYPE:=lvmohba}

xe_status() {
  OBJECT="$1"
  IS_FREE="$2"
  PARAMS="$3"
  shift 3
  {
    echo -e "Name\tTotal\tFree\tUsage"
    xe $OBJECT-list params="$PARAMS" $@ \
      | awk -v field_names="$PARAMS" -v part_is_free=$IS_FREE "$TRANSPOSE_ROWS" \
      | sort -k 1
  } | column -ts $'\t'
}

echo "Memory, GB"
xe_status host 1 name-label,memory-total,memory-free

echo

echo "Storage ($SR_TYPE), GB"
xe_status sr   0 name-label,physical-size,physical-utilisation type=$SR_TYPE
